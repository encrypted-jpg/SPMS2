# Generated by Django 3.1.7 on 2021-04-04 09:16

import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import mysite.models
import phonenumber_field.modelfields


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("compPage", "0001_initial"),
        ("auth", "0012_alter_user_first_name_max_length"),
        ("coursePage", "0001_initial"),
        ("partyPage", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="NewUser",
            fields=[
                (
                    "user_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="auth.user",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("MEMBER", "Member"),
                            ("COORDINATOR", "Coordinator"),
                            ("COMMITTEE", "Committee"),
                            ("MANAGER", "Manager"),
                        ],
                        default="MEMBER",
                        max_length=50,
                        verbose_name="Type",
                    ),
                ),
                ("age", models.DateField(verbose_name="age")),
                ("gender", models.CharField(max_length=10, verbose_name="gender")),
                (
                    "city",
                    models.CharField(
                        blank=True,
                        default="Kharagpur",
                        max_length=15,
                        null=True,
                        verbose_name="city",
                    ),
                ),
                (
                    "country",
                    models.CharField(
                        blank=True,
                        default="India",
                        max_length=15,
                        null=True,
                        verbose_name="country",
                    ),
                ),
                (
                    "phone_num",
                    phonenumber_field.modelfields.PhoneNumberField(
                        blank=True,
                        max_length=128,
                        null=True,
                        region=None,
                        verbose_name="phone_num",
                    ),
                ),
                (
                    "pincode",
                    models.IntegerField(blank=True, null=True, verbose_name="pincode"),
                ),
                (
                    "address",
                    models.CharField(
                        blank=True, max_length=200, null=True, verbose_name="address"
                    ),
                ),
                (
                    "membership_date",
                    models.DateField(
                        default="2001-01-01", verbose_name="membership_date"
                    ),
                ),
                (
                    "aCardNum",
                    models.IntegerField(
                        blank=True, default=0, null=True, verbose_name="acard_num"
                    ),
                ),
                (
                    "comp_participated",
                    models.IntegerField(default=0, verbose_name="comp_participated"),
                ),
                (
                    "is_member",
                    models.BooleanField(default="False", verbose_name="is_member"),
                ),
                (
                    "is_coordinator",
                    models.BooleanField(default="False", verbose_name="is_coordinator"),
                ),
                (
                    "is_committee",
                    models.BooleanField(default="False", verbose_name="is_committee"),
                ),
                (
                    "course_last_date",
                    models.DateField(
                        default="2001-01-01", verbose_name="course_last_date"
                    ),
                ),
                (
                    "cert",
                    models.FileField(
                        blank=True, null=True, upload_to="", verbose_name="cert"
                    ),
                ),
                (
                    "comp_cert",
                    models.FileField(
                        blank=True, null=True, upload_to="", verbose_name="comp_cert"
                    ),
                ),
                (
                    "course_count",
                    models.IntegerField(
                        blank=True, default=0, null=True, verbose_name="course_count"
                    ),
                ),
                (
                    "comp_count",
                    models.IntegerField(
                        blank=True, default=0, null=True, verbose_name="course_count"
                    ),
                ),
                (
                    "event_count",
                    models.IntegerField(
                        blank=True, default=0, null=True, verbose_name="course_count"
                    ),
                ),
                ("course", models.ManyToManyField(blank=True, to="coursePage.Course")),
                (
                    "event",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="partyPage.event",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            bases=("auth.user",),
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Slot",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("MEMBERSLOT", "Memberslot"),
                            ("COMPSLOT", "Compslot"),
                            ("GAMESLOT", "Gameslot"),
                            ("COURSESLOT", "Courseslot"),
                            ("EVENTSLOT", "Eventslot"),
                        ],
                        default="MEMBERSLOT",
                        max_length=50,
                        verbose_name="Type",
                    ),
                ),
                (
                    "from_time",
                    models.TimeField(max_length=10, verbose_name="from_time"),
                ),
                ("to_time", models.TimeField(max_length=10, verbose_name="to_time")),
                ("Date", models.DateField(max_length=20, verbose_name="date")),
                (
                    "Day",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=20,
                        null=True,
                        verbose_name="day",
                    ),
                ),
                (
                    "rem_num_participants",
                    models.IntegerField(
                        default=50, verbose_name="rem_num_participants"
                    ),
                ),
                (
                    "max_num_participants",
                    models.IntegerField(
                        default=50, verbose_name="max_num_participants"
                    ),
                ),
                (
                    "competition",
                    models.OneToOneField(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="compPage.competition",
                    ),
                ),
                ("course", models.ManyToManyField(blank=True, to="coursePage.Course")),
                (
                    "event",
                    models.OneToOneField(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="partyPage.event",
                    ),
                ),
                (
                    "game",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="compPage.game",
                    ),
                ),
                ("users", models.ManyToManyField(blank=True, to="mysite.NewUser")),
            ],
        ),
        migrations.CreateModel(
            name="Message",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "head",
                    models.CharField(blank=True, default="", max_length=30, null=True),
                ),
                (
                    "Description",
                    models.CharField(blank=True, default="", max_length=100, null=True),
                ),
                ("Date", models.DateField(default="2001-01-01", verbose_name="Date")),
                ("url", models.URLField(blank=True, default="#", null=True)),
                ("users", models.ManyToManyField(to="mysite.NewUser")),
            ],
        ),
        migrations.CreateModel(
            name="Committee",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("mysite.newuser",),
            managers=[
                ("objects", mysite.models.CommitteeManager()),
            ],
        ),
        migrations.CreateModel(
            name="Compslot",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("mysite.slot",),
        ),
        migrations.CreateModel(
            name="Coordinator",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("mysite.newuser",),
            managers=[
                ("objects", mysite.models.CoordinatorManager()),
            ],
        ),
        migrations.CreateModel(
            name="Courseslot",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("mysite.slot",),
        ),
        migrations.CreateModel(
            name="Eventslot",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("mysite.slot",),
        ),
        migrations.CreateModel(
            name="Gameslot",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("mysite.slot",),
        ),
        migrations.CreateModel(
            name="Manager",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("mysite.newuser",),
            managers=[
                ("objects", mysite.models.ManagerManager()),
            ],
        ),
        migrations.CreateModel(
            name="Member",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("mysite.newuser",),
            managers=[
                ("objects", mysite.models.MemberManager()),
            ],
        ),
        migrations.CreateModel(
            name="Memberslot",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("mysite.slot",),
        ),
    ]
